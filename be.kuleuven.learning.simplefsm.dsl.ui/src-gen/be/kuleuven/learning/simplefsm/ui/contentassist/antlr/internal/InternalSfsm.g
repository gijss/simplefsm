/*
* generated by Xtext
*/
grammar InternalSfsm;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package be.kuleuven.learning.simplefsm.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package be.kuleuven.learning.simplefsm.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import be.kuleuven.learning.simplefsm.services.SfsmGrammarAccess;

}

@parser::members {
 
 	private SfsmGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SfsmGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSimpleFiniteStateMachine
entryRuleSimpleFiniteStateMachine 
:
{ before(grammarAccess.getSimpleFiniteStateMachineRule()); }
	 ruleSimpleFiniteStateMachine
{ after(grammarAccess.getSimpleFiniteStateMachineRule()); } 
	 EOF 
;

// Rule SimpleFiniteStateMachine
ruleSimpleFiniteStateMachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleFiniteStateMachineAccess().getGroup()); }
(rule__SimpleFiniteStateMachine__Group__0)
{ after(grammarAccess.getSimpleFiniteStateMachineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleFiniteStateMachine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleFiniteStateMachine__Group__0__Impl
	rule__SimpleFiniteStateMachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleFiniteStateMachine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleFiniteStateMachineAccess().getSfsmKeyword_0()); }

	'sfsm' 

{ after(grammarAccess.getSimpleFiniteStateMachineAccess().getSfsmKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleFiniteStateMachine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleFiniteStateMachine__Group__1__Impl
	rule__SimpleFiniteStateMachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleFiniteStateMachine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleFiniteStateMachineAccess().getNameAssignment_1()); }
(rule__SimpleFiniteStateMachine__NameAssignment_1)
{ after(grammarAccess.getSimpleFiniteStateMachineAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleFiniteStateMachine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleFiniteStateMachine__Group__2__Impl
	rule__SimpleFiniteStateMachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleFiniteStateMachine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleFiniteStateMachineAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSimpleFiniteStateMachineAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleFiniteStateMachine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleFiniteStateMachine__Group__3__Impl
	rule__SimpleFiniteStateMachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleFiniteStateMachine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleFiniteStateMachineAccess().getInitialKeyword_3()); }

	'initial' 

{ after(grammarAccess.getSimpleFiniteStateMachineAccess().getInitialKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleFiniteStateMachine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleFiniteStateMachine__Group__4__Impl
	rule__SimpleFiniteStateMachine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleFiniteStateMachine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleFiniteStateMachineAccess().getInitialStateAssignment_4()); }
(rule__SimpleFiniteStateMachine__InitialStateAssignment_4)
{ after(grammarAccess.getSimpleFiniteStateMachineAccess().getInitialStateAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleFiniteStateMachine__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleFiniteStateMachine__Group__5__Impl
	rule__SimpleFiniteStateMachine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleFiniteStateMachine__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleFiniteStateMachineAccess().getStatesAssignment_5()); }
(rule__SimpleFiniteStateMachine__StatesAssignment_5)*
{ after(grammarAccess.getSimpleFiniteStateMachineAccess().getStatesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleFiniteStateMachine__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleFiniteStateMachine__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleFiniteStateMachine__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleFiniteStateMachineAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getSimpleFiniteStateMachineAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_0()); }

	'state' 

{ after(grammarAccess.getStateAccess().getStateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
(rule__State__NameAssignment_1)
{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getActionKeyword_3()); }

	'action' 

{ after(grammarAccess.getStateAccess().getActionKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getSTRINGTerminalRuleCall_4()); }
	RULE_STRING
{ after(grammarAccess.getStateAccess().getSTRINGTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__5__Impl
	rule__State__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getOutgoingTransitionsAssignment_5()); }
(rule__State__OutgoingTransitionsAssignment_5)*
{ after(grammarAccess.getStateAccess().getOutgoingTransitionsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventKeyword_0()); }

	'event' 

{ after(grammarAccess.getTransitionAccess().getEventKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventAssignment_1()); }
(rule__Transition__EventAssignment_1)
{ after(grammarAccess.getTransitionAccess().getEventAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGotosKeyword_2()); }

	'gotos' 

{ after(grammarAccess.getTransitionAccess().getGotosKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetAssignment_3()); }
(rule__Transition__TargetAssignment_3)
{ after(grammarAccess.getTransitionAccess().getTargetAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__SimpleFiniteStateMachine__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleFiniteStateMachineAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSimpleFiniteStateMachineAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleFiniteStateMachine__InitialStateAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleFiniteStateMachineAccess().getInitialStateStateParserRuleCall_4_0()); }
	ruleState{ after(grammarAccess.getSimpleFiniteStateMachineAccess().getInitialStateStateParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleFiniteStateMachine__StatesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleFiniteStateMachineAccess().getStatesStateParserRuleCall_5_0()); }
	ruleState{ after(grammarAccess.getSimpleFiniteStateMachineAccess().getStatesStateParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__OutgoingTransitionsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_5_0()); }
	ruleTransition{ after(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EventAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getTransitionAccess().getEventSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TargetAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetStateCrossReference_3_0()); }
(
{ before(grammarAccess.getTransitionAccess().getTargetStateIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getTargetStateIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getTargetStateCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


